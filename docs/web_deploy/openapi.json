{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "blob_api",
    "description": ""
  },
  "servers": [
    {
      "url": "https://api.demo.tokend.io",
      "description": "TokenD Developer Environment"
    }
  ],
  "paths": {
    "/blobs": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Create blob",
        "operationId": "createBlob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/Blob"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Blob"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Get blobs list",
        "operationId": "getBlobsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumberParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "in": "query",
            "name": "filter[address]",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Blob"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blobs/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Blob identifier",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Get blob",
        "operationId": "getBlob",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Blob"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Blobs"
        ],
        "summary": "Delete Blob",
        "operationId": "deleteBlob",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "invalid request"
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload Document",
        "description": "Upload Document",
        "operationId": "getUploadDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Document": {
                    "type": "object",
                    "$ref": "#/components/schemas/Document"
                  },
                  "Image": {
                    "type": "string",
                    "format": "base64"
                  }
                }
              },
              "encoding": {
                "profileImage": {
                  "contentType": "image/png, image/jpeg"
                }
              }
            }
          },
          "description": "Upload Document",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DocumentKey"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Blob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BlobKey"
          },
          {
            "type": "object",
            "required": [
              "relationships",
              "attributes"
            ],
            "properties": {
              "relationships": {
                "type": "object",
                "required": [
                  "owner"
                ],
                "properties": {
                  "owner": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "description": "Blob owner",
                    "properties": {
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/OwnerKey"
                      }
                    }
                  }
                }
              },
              "attributes": {
                "type": "object",
                "required": [
                  "blob",
                  "purpose"
                ],
                "properties": {
                  "blob": {
                    "type": "object",
                    "format": "json.RawMessage"
                  },
                  "purpose": {
                    "type": "string",
                    "example": "KYC"
                  }
                }
              }
            }
          }
        ]
      },
      "BlobKey": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "blob"
            ]
          },
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "purpose"
                ],
                "properties": {
                  "purpose": {
                    "type": "string",
                    "enum": [
                      "kyc"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "owner"
                ],
                "properties": {
                  "owner": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "description": "Document owner",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/OwnerKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "DocumentKey": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "document type",
            "type": "string",
            "enum": [
              "passport"
            ]
          },
          "id": {
            "type": "string",
            "example": "123"
          }
        }
      },
      "OwnerKey": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "owner address",
            "example": "0x750Bd531CEA1f68418DDF2373193CfbD86A69058"
          }
        }
      }
    },
    "parameters": {
      "pageLimitParam": {
        "in": "query",
        "name": "page[limit]",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 15,
          "description": "Numbers of items per page to return."
        }
      },
      "pageNumberParam": {
        "in": "query",
        "name": "page[number]",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of a page to return."
      },
      "sortingParam": {
        "in": "query",
        "name": "page[order]",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc",
          "description": "Order of records on the page. If sortingParam is not specified, order of records is by default sorted by ID."
        }
      }
    }
  }
}
